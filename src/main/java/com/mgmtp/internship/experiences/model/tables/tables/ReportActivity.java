/*
 * This file is generated by jOOQ.
 */
package com.mgmtp.internship.experiences.model.tables.tables;


import com.mgmtp.internship.experiences.model.tables.Keys;
import com.mgmtp.internship.experiences.model.tables.Public;
import com.mgmtp.internship.experiences.model.tables.tables.records.ReportActivityRecord;

import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * report activity table
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.11"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class ReportActivity extends TableImpl<ReportActivityRecord> {

    private static final long serialVersionUID = -216797923;

    /**
     * The reference instance of <code>public.report_activity</code>
     */
    public static final ReportActivity REPORT_ACTIVITY = new ReportActivity();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<ReportActivityRecord> getRecordType() {
        return ReportActivityRecord.class;
    }

    /**
     * The column <code>public.report_activity.activity_id</code>.
     */
    public final TableField<ReportActivityRecord, Long> ACTIVITY_ID = createField("activity_id", org.jooq.impl.SQLDataType.BIGINT.nullable(false), this, "");

    /**
     * The column <code>public.report_activity.user_id</code>.
     */
    public final TableField<ReportActivityRecord, Long> USER_ID = createField("user_id", org.jooq.impl.SQLDataType.BIGINT.nullable(false), this, "");

    /**
     * Create a <code>public.report_activity</code> table reference
     */
    public ReportActivity() {
        this(DSL.name("report_activity"), null);
    }

    /**
     * Create an aliased <code>public.report_activity</code> table reference
     */
    public ReportActivity(String alias) {
        this(DSL.name(alias), REPORT_ACTIVITY);
    }

    /**
     * Create an aliased <code>public.report_activity</code> table reference
     */
    public ReportActivity(Name alias) {
        this(alias, REPORT_ACTIVITY);
    }

    private ReportActivity(Name alias, Table<ReportActivityRecord> aliased) {
        this(alias, aliased, null);
    }

    private ReportActivity(Name alias, Table<ReportActivityRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment("report activity table"));
    }

    public <O extends Record> ReportActivity(Table<O> child, ForeignKey<O, ReportActivityRecord> key) {
        super(child, key, REPORT_ACTIVITY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Public.PUBLIC;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<ForeignKey<ReportActivityRecord, ?>> getReferences() {
        return Arrays.<ForeignKey<ReportActivityRecord, ?>>asList(Keys.REPORT_ACTIVITY__FK_REPORT_ACTIVITY_ACTIVITY, Keys.REPORT_ACTIVITY__FK_ACTIVITY_IMAGE_USER);
    }

    public Activity activity() {
        return new Activity(this, Keys.REPORT_ACTIVITY__FK_REPORT_ACTIVITY_ACTIVITY);
    }

    public User user() {
        return new User(this, Keys.REPORT_ACTIVITY__FK_ACTIVITY_IMAGE_USER);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ReportActivity as(String alias) {
        return new ReportActivity(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ReportActivity as(Name alias) {
        return new ReportActivity(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public ReportActivity rename(String name) {
        return new ReportActivity(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public ReportActivity rename(Name name) {
        return new ReportActivity(name, null);
    }
}
